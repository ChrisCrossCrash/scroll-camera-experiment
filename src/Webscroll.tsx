/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useEffect } from 'react'
import { useFrame } from '@react-three/fiber'
import {
  useGLTF,
  PerspectiveCamera,
  useAnimations,
  useScroll,
  Html,
} from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Pricing } from './components/Pricing/Pricing'

interface GLTFAction extends THREE.AnimationClip {
  name: 'CameraAction'
}

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    Plane001: THREE.Mesh
    Plane005_1: THREE.Mesh
    Plane005_2: THREE.Mesh
    Plane004: THREE.Mesh
    Text008: THREE.Mesh
    Text009: THREE.Mesh
    Text010: THREE.Mesh
    Text011: THREE.Mesh
    Plane003: THREE.Mesh
    Text: THREE.Mesh
    Text001: THREE.Mesh
    Text002: THREE.Mesh
    Text003_1: THREE.Mesh
    Plane002: THREE.Mesh
    Text007: THREE.Mesh
    Text004: THREE.Mesh
    Text005: THREE.Mesh
    Text006: THREE.Mesh
    PricingHeadline: THREE.Mesh
    PricingParagraph: THREE.Mesh
    ContactHeadline001: THREE.Mesh
    ContactHeadline002: THREE.Mesh
    Plane008: THREE.Mesh
    Plane008_1: THREE.Mesh
    ContactHeadline003: THREE.Mesh
    ContactHeadline004: THREE.Mesh
    Plane010: THREE.Mesh
    Plane010_1: THREE.Mesh
    ButtonSubmit: THREE.Mesh
    TextSubmit: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.Primary']: THREE.MeshStandardMaterial
    ['Material.White']: THREE.MeshStandardMaterial
    ['Material.Black']: THREE.MeshStandardMaterial
    ['Material.Red']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'CameraAction'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF(
    '/webscroll-transformed.glb'
  ) as GLTFResult
  const { actions } = useAnimations<any>(animations, group)

  const animationDurationS = 10
  const scrollData = useScroll()

  useEffect(() => {
    const cameraAction = actions.CameraAction
    if (!cameraAction) return
    cameraAction?.play()
    cameraAction.paused = true
  }, [actions])

  useFrame(({ camera }) => {
    const action = actions.CameraAction
    const time = scrollData.offset
    if (!action || !time) return
    action.time = time * animationDurationS
    camera.lookAt(0, 1, 0)
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <ambientLight />
      <group
        name='Light'
        position={[4.08, 5.9, -1.01]}
        rotation={[1.89, 0.88, -2.05]}
      >
        <pointLight
          name='Light_Orientation'
          intensity={1000}
          decay={2}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
      <group
        name='Camera'
        position={[1.88, 0.25, 4.49]}
        rotation={[1.56, 0.08, 1.73]}
      >
        <PerspectiveCamera
          name='Camera_Orientation'
          makeDefault={true}
          far={100}
          near={0.1}
          fov={22.9}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
      <group name='Point' position={[-5, 1.08, 0.38]}>
        <pointLight
          name='Point_Orientation'
          intensity={50}
          decay={2}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
      <mesh
        name='Plane001'
        geometry={nodes.Plane001.geometry}
        material={materials['Material.001']}
        scale={4}
      />
      {/* <group
        name='CardEnterprise'
        position={[-1.15, 0.97, 2.68]}
        rotation={[1.35, -0.2, 0.73]}
        scale={0.15}
      >
        <Card
          headline='Enterprise'
          price='$15 / mo'
          btnText='Get started'
          features={[
            '30 users included',
            '15 GB of storage',
            'Phone and email support',
            'Help center access',
            'Agency portal access',
          ]}
        />
      </group>
      <group
        name='CardFree'
        position={[-1.68, 0.96, 2.19]}
        rotation={[1.35, -0.2, 0.73]}
        scale={0.15}
      >
        <Card
          headline='Free'
          price='0$ / mo'
          btnText='Sign up for free'
          features={[
            '10 users included',
            '2 GB of storage',
            'Email support',
            'Help center access',
          ]}
        />
      </group>
      <group
        name='CardPro'
        position={[-1.41, 0.96, 2.44]}
        rotation={[1.35, -0.2, 0.73]}
        scale={0.15}
      >
        <Card
          headline='Pro'
          price='$15 / mo'
          btnText='Get started'
          features={[
            '20 users included',
            '10 GB of storage',
            'Priority email support',
            'Help center access',
          ]}
        />
      </group> */}
      <group
        position={[-0.9, 1.15, 3]}
        rotation={[1.35, -0.15, 0.57]}
        scale={[0.16, 0.16, 0.16]}
      >
        <Pricing />
      </group>
      {/* <mesh
        name='PricingHeadline'
        geometry={nodes.PricingHeadline.geometry}
        material={nodes.PricingHeadline.material}
        position={[-1.31, 1.48, 2.32]}
        rotation={[1.35, -0.19, 0.71]}
        scale={[0.16, 0.16, 0.16]}
      /> */}
      {/* <mesh
        name='PricingParagraph'
        geometry={nodes.PricingParagraph.geometry}
        material={nodes.PricingParagraph.material}
        position={[-1.34, 1.33, 2.36]}
        rotation={[1.35, -0.2, 0.73]}
        scale={[0.83, 0.83, 0.83]}
      /> */}
      <mesh
        name='ContactHeadline001'
        geometry={nodes.ContactHeadline001.geometry}
        material={nodes.ContactHeadline001.material}
        position={[-2.83, 1.26, -0.51]}
        rotation={[1.57, 0, 1.61]}
        scale={0.16}
      />
      <mesh
        name='ContactHeadline002'
        geometry={nodes.ContactHeadline002.geometry}
        material={nodes.ContactHeadline002.material}
        position={[-2.81, 1.08, -0.81]}
        rotation={[1.57, 0, 1.61]}
        scale={0.1}
      />
      <group
        name='Plane005'
        position={[-2.84, 1.09, -0.45]}
        rotation={[3.14, -1.5, 3.14]}
      >
        <mesh
          name='Plane008'
          geometry={nodes.Plane008.geometry}
          material={nodes.Plane008.material}
        />
        <mesh
          name='Plane008_1'
          geometry={nodes.Plane008_1.geometry}
          material={nodes.Plane008_1.material}
        />
      </group>
      <group
        name='Plane006'
        position={[-2.84, 0.95, -0.45]}
        rotation={[3.14, -1.5, 3.14]}
      >
        <mesh
          name='Plane008'
          geometry={nodes.Plane008.geometry}
          material={nodes.Plane008.material}
        />
        <mesh
          name='Plane008_1'
          geometry={nodes.Plane008_1.geometry}
          material={nodes.Plane008_1.material}
        />
      </group>
      <mesh
        name='ContactHeadline003'
        geometry={nodes.ContactHeadline003.geometry}
        material={nodes.ContactHeadline003.material}
        position={[-2.81, 0.94, -0.81]}
        rotation={[1.57, 0, 1.61]}
        scale={0.1}
      />
      <mesh
        name='ContactHeadline004'
        geometry={nodes.ContactHeadline004.geometry}
        material={nodes.ContactHeadline004.material}
        position={[-2.81, 0.8, -0.81]}
        rotation={[1.57, 0, 1.61]}
        scale={0.1}
      />
      <group
        name='Plane007'
        position={[-2.84, 0.81, -0.45]}
        rotation={[3.14, -1.5, 3.14]}
      >
        <mesh
          name='Plane010'
          geometry={nodes.Plane010.geometry}
          material={nodes.Plane010.material}
        />
        <mesh
          name='Plane010_1'
          geometry={nodes.Plane010_1.geometry}
          material={nodes.Plane010_1.material}
        />
      </group>
      <mesh
        name='ButtonSubmit'
        geometry={nodes.ButtonSubmit.geometry}
        material={materials['Material.Red']}
        position={[-2.78, 0.44, -0.62]}
        rotation={[3.14, -1.5, 3.14]}
        scale={[0.14, 0.05, 0.04]}
      >
        <mesh
          name='TextSubmit'
          geometry={nodes.TextSubmit.geometry}
          material={nodes.TextSubmit.material}
          position={[-0.02, -0.4, 1.2]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.52, 1.7, 1.62]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/webscroll-transformed.glb')
